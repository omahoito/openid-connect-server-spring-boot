subprojects {
	buildscript {
		ext {
			springVersion = "5.2.9.RELEASE"
			springBootVersion = "2.4.0"
			springSecurityOauthVersion = "2.5.0.RELEASE"	// CVE-2019-11269
			springSecurityTestVersion = "5.3.4.RELEASE"
			openIdConnectVersion = "1.3.3"
			bouncycastleVersion = "1.66"
			httpclientVersion = "4.5.12"
			jsonpathVersion = "2.4.0"
			h2Version = "1.4.200"
			joseJwtVersion = "8.20"
		}
		repositories {
			mavenCentral()
			jcenter()
			maven {url "https://repo.spring.io/plugins-snapshot"}
			maven {url "https://repo.spring.io/milestone"}
			maven {url "https://repo.spring.io/release"}
		}
	}
	
	apply plugin: "eclipse"
	apply plugin: "idea" 
	apply plugin: "java"
	apply plugin: "maven"
	apply plugin: "signing"
	apply from: "$rootProject.projectDir/deploy.gradle"

	ext {
		baseVersion = "1.6.2"
		isSnapshot = false
		snapshotSuffix = "-SNAPSHOT"
		projectVersion = baseVersion + (isSnapshot ? snapshotSuffix : "")
	}

	group = "fi.oda"
	version = projectVersion

	sourceCompatibility = 1.8
	targetCompatibility = 1.8

	repositories {
		mavenCentral()
		maven {url "https://oss.sonatype.org/content/groups/public"}
	}

	task javadocJar(type: Jar) {
		classifier = 'javadoc'
		from javadoc
	}

	task sourcesJar(type: Jar) {
		classifier = 'sources'
		from sourceSets.main.allSource
	}
	
	artifacts {
		archives javadocJar, sourcesJar
	}

	signing {
		required {!isSnapshot && gradle.taskGraph.hasTask("uploadArchives") }  
		sign configurations.archives
	}

	project.ext.set("ossrhUsername",  project.hasProperty("ossrhUsername") ? ossrhUsername : System.getenv("SONATYPE_USERNAME"))
	project.ext.set("ossrhPassword",  project.hasProperty("ossrhPassword") ? ossrhPassword : System.getenv("SONATYPE_PASSWORD"))
	/*
	uploadArchives {
		repositories {
			mavenDeployer {
				beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
				
				//for local maven deploy testing
				//repository(url: mavenLocal().url)
					
				repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
					authentication(userName: ossrhUsername, password: ossrhPassword)
				}
	
				snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
					authentication (userName: ossrhUsername, password: ossrhPassword)
				}
				
	
				pom.project {
					name project.name
					description project.description
					packaging 'jar'
					url 'https://github.com/simpledynamics/openid-connect-server-spring-boot'
					
					scm {
						connection 'scm:git:https://github.com/simpledynamics/openid-connect-server-spring-boot.git'
						developerConnection 'scm:git:https://github.com/simpledynamics/openid-connect-server-spring-boot.git'
						url 'https://github.com/simpledynamics/openid-connect-server-spring-boot'
					}
	
					licenses {
						license {
							name 'The Apache License, Version 2.0'
							url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
						}
					}
	
					organization {
						name 'Simple Dynamics'
						url 'http://www.simpledynamics.net/'
					}
					
					developers {
						developer {
							id 'barretttucker'
							name 'Barrett Tucker'
							email 'barrett@simpledynamics.net'
						}
						developer {
							id 'nategrover'
							name 'Nate Grover'
							email 'nate@simpledynamics.net'
						}
					}
				}
			}
		}
	}*/
	
}

